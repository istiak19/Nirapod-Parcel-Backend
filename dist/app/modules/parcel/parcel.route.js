"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parcelRoutes = void 0;
const express_1 = require("express");
const checkAuth_1 = require("../../middleware/checkAuth");
const validateRequest_1 = require("../../middleware/validateRequest");
const parcel_validation_1 = require("./parcel.validation");
const parcel_controller_1 = require("./parcel.controller");
const router = (0, express_1.Router)();
router.get("/", (0, checkAuth_1.checkAuth)("Admin"), parcel_controller_1.parcelController.getAllParcel);
router.get("/track/:trackingId", parcel_controller_1.parcelController.getTrackingParcel);
router.post("/", (0, checkAuth_1.checkAuth)("Sender"), (0, validateRequest_1.validateRequest)(parcel_validation_1.createParcelZodSchema), parcel_controller_1.parcelController.createParcel);
router.get("/me", (0, checkAuth_1.checkAuth)("Sender"), parcel_controller_1.parcelController.getMeParcel);
router.get("/me-receiver", (0, checkAuth_1.checkAuth)("Receiver"), parcel_controller_1.parcelController.getMeReceiverParcel);
router.get("/incoming", (0, checkAuth_1.checkAuth)("Receiver"), parcel_controller_1.parcelController.incomingParcels);
router.get("/history", (0, checkAuth_1.checkAuth)("Receiver"), parcel_controller_1.parcelController.deliveryHistoryParcel);
router.patch("/cancel/:id", (0, checkAuth_1.checkAuth)("Sender"), parcel_controller_1.parcelController.cancelParcel);
router.get("/status-log/:id", (0, checkAuth_1.checkAuth)("Sender"), parcel_controller_1.parcelController.statusLogParcel);
router.patch("/return/:id", (0, checkAuth_1.checkAuth)("Receiver"), (0, validateRequest_1.validateRequest)(parcel_validation_1.updateParcelZodSchema), parcel_controller_1.parcelController.returnParcel);
router.patch("/reschedule/:id", (0, checkAuth_1.checkAuth)("Receiver"), parcel_controller_1.parcelController.rescheduleParcel);
router.patch("/delivered/:id", (0, checkAuth_1.checkAuth)("Receiver"), (0, validateRequest_1.validateRequest)(parcel_validation_1.updateParcelZodSchema), parcel_controller_1.parcelController.confirmDeliveryParcel);
router.patch("/status/:id", (0, checkAuth_1.checkAuth)("Admin"), (0, validateRequest_1.validateRequest)(parcel_validation_1.updateParcelZodSchema), parcel_controller_1.parcelController.statusParcel);
router.patch("/block/:id", (0, checkAuth_1.checkAuth)("Admin"), (0, validateRequest_1.validateRequest)(parcel_validation_1.updateParcelZodSchema), parcel_controller_1.parcelController.isBlockedParcel);
router.patch("/assign-parcel/:id", (0, checkAuth_1.checkAuth)("Admin"), (0, validateRequest_1.validateRequest)(parcel_validation_1.updateParcelZodSchema), parcel_controller_1.parcelController.assignRiderParcel);
exports.parcelRoutes = router;
